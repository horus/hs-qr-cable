{-# LANGUAGE ImportQualifiedPost #-}
{-# LANGUAGE TypeApplications #-}

module Derive where

import Crypto.Hash.Algorithms (SHA256)
import Crypto.KDF.HKDF
import Data.ByteString qualified as BS

{--
// DerivedValueType enumerates the different types of values that might be
// derived in caBLEv2 from some secret. The values this this enum are protocol
// constants and thus must not change over time.
enum class DerivedValueType : uint32_t {
  kEIDKey = 1,
  kTunnelID = 2,
  kPSK = 3,
  kPairedSecret = 4,
  kIdentityKeySeed = 5,
  kPerContactIDSecret = 6,
};
--}

-- https://www.rfc-editor.org/rfc/rfc5869#section-2

hkdfSha256 :: BS.ByteString -> BS.ByteString -> BS.ByteString -> Int -> BS.ByteString
hkdfSha256 salt ikm = expand @SHA256 (extract salt ikm)

-- where info = BS.pack [0x2, 0x0, 0x0, 0x0]

{--

-- [
--     0x1f, 0xba, 0x3c, 0xce, 0x17, 0x62, 0x2c, 0x68, 0x26, 0x8d, 0x9f, 0x75, 0xb5, 0xa8,
--     0xa3, 0x35, 0x1b, 0x51, 0x7f, 0x9, 0x6f, 0xb5, 0xe2, 0x94, 0x94, 0x1a, 0xf7, 0xe3,
--     0xa6, 0xa8, 0xd6, 0xe1, 0xe3, 0x4f, 0x1a, 0xa3, 0x74, 0x72, 0x38, 0xc0, 0x4d, 0x3b,
--     0xd2, 0x5e, 0x7, 0xef, 0x1b, 0x35, 0xfe, 0xf3, 0x59, 0x0, 0xd, 0x75, 0x56, 0x15, 0xcd,
--     0x85, 0xbe, 0x27, 0xcf, 0xc8, 0x7, 0xd1,
-- ]

testDerive =
  let salt = BS.pack [0x30, 0x7a, 0x70, 0x6e, 0x63, 0x38, 0x2e, 0x8e, 0x9d, 0x46, 0xcc, 0xdb, 0xc, 0xeb, 0xed, 0x5c, 0x2b, 0x19, 0x28, 0xc5, 0xae, 0x2d, 0xee, 0x63, 0x52, 0xe1, 0x30, 0xac, 0xe1, 0xf7, 0x4f, 0x44]
   in hkdfSha256 salt "" "" 64

-- [
--     0x3c, 0xb2, 0x5f, 0x25, 0xfa, 0xac, 0xd5, 0x7a, 0x90, 0x43, 0x4f, 0x64, 0xd0, 0x36,
--     0x2f, 0x2a, 0x2d, 0x2d, 0xa, 0x90, 0xcf, 0x1a, 0x5a, 0x4c, 0x5d, 0xb0, 0x2d, 0x56,
--     0xec, 0xc4, 0xc5, 0xbf, 0x34, 0x0, 0x72, 0x8, 0xd5, 0xb8, 0x87, 0x18, 0x58, 0x65,
-- ]
testDerive' =
  let salt = BS.pack [0x00 .. 0x0c]
      ikm = BS.pack $ replicate 22 0x0b
      info = BS.pack [0xf0 .. 0xf9]
   in hkdfSha256 salt ikm info 42

-- [f6, f5, 1d, 7e, 27, 9f, 3, 94, 65, 2c, fa, 94, ca, 5a, 67, 68]

testDerive'' =
      let ikm = BS.pack [
            0x30, 0x7a, 0x70, 0x6e, 0x63, 0x38, 0x2e, 0x8e, 0x9d, 0x46, 0xcc, 0xdb, 0xc, 0xeb,
            0xed, 0x5c, 0x2b, 0x19, 0x28, 0xc5, 0xae, 0x2d, 0xee, 0x63, 0x52, 0xe1, 0x30, 0xac,
            0xe1, 0xf7, 0x4f, 0x44 ]
          info = BS.pack [0x2, 0x0, 0x0, 0x0]
   in hkdfSha256 "" ikm info 16

--}
